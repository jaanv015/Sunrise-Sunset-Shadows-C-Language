//Scene 1 Sunrise & Sunset
void backgroundSunRiseSet() {
    glBegin(GL_POLYGON);
    glColor3f(sky_R, sky_G, sky_B); // Sky Blue
    glVertex2f(-2.0, 0.0);
    glVertex2f(2.0, 0.0);
    glVertex2f(2.0, 2.0);
    glVertex2f(-2.0, 2.0);
    glEnd();

    glBegin(GL_POLYGON);
    glColor3f(sky_R, sky_G, sky_B); // Sky Blue
    glVertex2f(-2.0, 0.0);
    glVertex2f(2.0, 0.0);
    glColor3f(grass_R, grass_G, grass_B); // Green Grass
    glVertex2f(2.0, -1.0);
    glVertex2f(-2.0, -1.0);
    glEnd();
}
void drawCircle(GLfloat x, GLfloat y, GLfloat r, GLfloat g, GLfloat b, GLfloat sx, GLfloat sy, GLfloat radius) {
        glPushMatrix();
        glTranslatef(x, y, 0);
        glScalef(sx, sy, 0);
    glBegin(GL_POLYGON);
        glColor3ub(r, g, b);
    for (GLfloat i = 0; i < 6.28319; i += 0.87266)
        glVertex2f(radius * sin(i * PI / 3.14159), radius * cos(i * PI / 3.14159));
    glEnd();
        glPopMatrix();
}
void colorChangeSun(void) {
        glColor3f(colR,colG,colB); //set sun colour
        glTranslatef(ballX,ballY,ballZ); //moving it toward the screen a bit on creation
        glScalef( sunSX, sunSY, sunSZ);
        glutSolidSphere (0.2, 30, 30); //create sun
}
//Change of scene features from sunrise to sunset and back to sunrise
void update(int value) {
    if(ballX>1.9){
        sunSX = 0.4;
        sunSY = 0.4;
        sunSZ = 0.4;
        ballX = -2.0;
        ballY = 1.0;
        flag=1;
        colR=1.0;
        colG=1.0;
        colB=0.0;
        sky_R = 0.02; sky_G = 0.16; sky_B = 1.0;
        grass_R = 0.25; grass_G =  0.57; grass_B = 0.09;
    }
    if(flag){
      sunSX += 0.0071;
      sunSY += 0.0071;
      sunSZ += 0.0071;
      ballX += 0.009;
      ballY += 0.0043;
      colR +=0.001;
      colG +=0.001;
      colB -=0.001;
      sky_R += 0.001;sky_G +=0.005;sky_B +=0.006;
      grass_R +=0.0005;grass_G += 0.0001; grass_B +=0.0002;
       if(ballX>0.1) {
           flag=0;
       }
    }
    if (!flag){
        sunSX -= 0.0084;
        sunSY -= 0.0084;
        sunSZ -= 0.0084;
        ballX += 0.009;
        ballY -= 0.006;
        colG -= 0.005;
        sky_R -= 0.004;sky_G -=0.007;sky_B -=0.003;
        grass_R -=0.0008;grass_G -= 0.0004; grass_B -=0.0005;
        if(ballX<0.5){
           flag=1;
       }
    }
    glutPostRedisplay(); //Tell GLUT that the display has changed.Tell GLUT to call update again in 75 milliseconds
    glutTimerFunc(75, update, 0);
}
void mountain(){
   //mountain1
   glBegin(GL_POLYGON);
      glColor3f(0.65, 0.4, 0.25);
      glVertex2f(-2.0, 0.0);    // x, y
      glVertex2f(-0.6, 1.5);
      glVertex2f(0.3, 0.0);
   glEnd();
   //mountain2
   glBegin(GL_POLYGON);
      glColor3f(0.65, 0.4, 0.25);
      glVertex2f(0.3, 0.0);    // x, y
      glVertex2f(0.8, 1.4);
      glVertex2f(2.0, 0.0);
   glEnd();
   glColor3f(1.0,0.5,0.0);
   drawText(-1.7,1.7,"SUNRISE");
   drawText(1.3,-0.2,"SUNSET");
}
void road(){
    glBegin(GL_POLYGON);  //road space(rectangle)
      glColor3ub(40, 40, 40);
      glVertex2f(-2.0, -2.0);
      glVertex2f(2.0, -2.0);
      glVertex2f(2.0, -1.0);
      glVertex2f(-2.0, -1.0);
    glEnd();
    glLineWidth(3);
    glBegin(GL_LINES);  //white lines on the road
    glColor3ub(255, 255, 255);
    glVertex2f(-2.0, -1.6);  //first line
    glVertex2f(-1.5, -1.6);
    glVertex2f(-1.3, -1.6);  //second line
    glVertex2f(-0.8, -1.6);
    glVertex2f(-0.6, -1.6);  //third line
    glVertex2f(-0.1, -1.6);
    glVertex2f(0.1, -1.6);  //fourth line
    glVertex2f(0.6, -1.6);
    glVertex2f(0.8, -1.6);   //fifth line
    glVertex2f(1.3, -1.6);
    glVertex2f(1.5, -1.6);  //sixth line
    glVertex2f(2.0, -1.6);
    glEnd();
    glLineWidth(2);
}
//Trees below mountain
void tree(GLfloat tx, GLfloat ty,
    GLfloat sx, GLfloat sy) {
    glPushMatrix();
    glTranslatef(tx, ty, 0);
    glScalef(sx, sy, 0);
    glBegin(GL_POLYGON);    // Bark
    glColor3ub(86, 76, 11);
    glVertex2f(0.5, -1.0);
    glVertex2f(0.7, -1.0);
    glColor3ub(71, 56, 6);
    glVertex2f(0.5,-0.5);
    glVertex2f(0.7,-0.5);
    glEnd();
    drawCircle(0.5, -0.5, 5, 80, 10, 0.5, 0.5, 0.7);    // Tree
    glPopMatrix();  
}
//Draw compass
void compass(){
    glBegin(GL_LINES);
    glColor3f(0.917647,0.917647,0.678431);
    glVertex2f(1.75,1.83);
    glVertex2f(1.75,1.53);
    glEnd();
    glBegin(GL_LINES);
    glColor3f(0.917647,0.917647,0.678431);
    glVertex2f(1.65,1.73);
    glVertex2f(1.85,1.73);
    glEnd();
    glColor3f(0.576471,0.858824,0.439216);
    drawText(1.71,1.86,"S");
    drawText(1.71,1.41,"N");
    glColor3f(0.556863,0.137255,0.137255);
    drawText(1.55,1.68,"E");
    drawText(1.87,1.68,"W");
}
void windmill(){
    glBegin(GL_POLYGON);
    glColor3f(0.7,0.7,0.7);
    glVertex2f(-0.8,-1.0);
    glVertex2f(-0.7,-0.5);
    glVertex2f(-0.6,-1.0);
    glEnd();

    glPushMatrix();
    glTranslatef( center_x, center_y, 0.0);
    glRotatef(current_angle, 0.0, 0.0 , 1.0);
    current_angle += step_angle;
    glTranslatef( -center_x, -center_y, 0.0);
    glLineWidth(6);
    glBegin(GL_LINES);  //white lines for windmill
    glColor3ub(255, 255, 255);
    glVertex2f(-0.7,-0.5);  //first line
    glVertex2f(-0.7,-0.4);
    glVertex2f(-0.7,-0.5);  //second line
    glVertex2f(-0.5,-0.6);
    glVertex2f(-0.7,-0.5);  //third line
    glVertex2f(-0.9,-0.6);
    glEnd();
    glLineWidth(4);
    glPopMatrix();
}
